main = main
expressions = expressions
statements = statements
oi = oi
x = x
test = test
fu = fu
max = max
===== Global Symbol Table =====
putchar	int(int)
getchar	int(void)
main	int(void,char)
expressions	int(void)
statements	int(void)
oi	int(int,int)
x	int(int)
a	int
test	void(int)
fu	int(void)
max	int(int,int)

===== Function main Symbol Table =====
return	int
a	int
b	int
c	int

===== Function expressions Symbol Table =====
return	int

===== Function statements Symbol Table =====
return	int

===== Function oi Symbol Table =====
return	int
tudo	int	param
bem	int	param
a	char
b	char
c	char
d	double
e	double
f	double

===== Function x Symbol Table =====
return	int
x	int	param
a	char
r	char

===== Function test Symbol Table =====
return	void
a	int	param

===== Function fu Symbol Table =====
return	int

===== Function max Symbol Table =====
return	int
num1	int	param
num2	int	param
result	int

Program
..FuncDefinition
....Int
....Id(main)
....ParamList
......ParamDeclaration
........Void
......ParamDeclaration
........Char
....FuncBody
......Declaration
........Int
........Id(a)
......Declaration
........Int
........Id(b)
......Declaration
........Int
........Id(c)
......Comma
........Store
..........Id(d)
..........IntLit(2) - int
........Store - int
..........Id(a) - int
..........ChrLit('a') - int
......Declaration
........Int
........Id(a)
........Ne - int
..........Id(b2)
..........Id(x)
..FuncDeclaration
....Double
....Id(main)
....ParamList
......ParamDeclaration
........Char
........Id(in)
......ParamDeclaration
........Int
......ParamDeclaration
........Void
......ParamDeclaration
........Double
......ParamDeclaration
........Int
..FuncDefinition
....Int
....Id(main)
....ParamList
......ParamDeclaration
........Int
........Id(x)
......ParamDeclaration
........Int
........Id(y)
......ParamDeclaration
........Int
........Id(z)
....FuncBody
......Declaration
........Int
........Id(x)
........IntLit(1)
......Declaration
........Int
........Id(y)
........IntLit(2)
......Declaration
........Int
........Id(z)
......Declaration
........Int
........Id(a)
......Declaration
........Int
........Id(b)
......Declaration
........Int
........Id(c)
......Declaration
........Int
........Id(d)
......Declaration
........Int
........Id(e)
......If
........Or
..........And
............Gt
..............Id(x)
..............Id(y)
............Gt
..............Id(z)
..............Id(y)
..........Ne
............Id(z)
............Id(x)
........While
..........IntLit(1)
..........Return
............IntLit(1)
........Return
..........IntLit(0)
..FuncDefinition
....Int
....Id(expressions)
....ParamList
......ParamDeclaration
........Void
....FuncBody
......Comma
........Eq - int
..........Id(variable)
..........IntLit(2) - int
........Ne - int
..........Id(variable)
..........IntLit(2) - int
......Gt - int
........Id(variable)
........IntLit(2) - int
......Lt - int
........Id(variable)
........IntLit(2) - int
......Ge - int
........Id(variable)
........IntLit(2) - int
......Le - int
........Id(variable)
........IntLit(2) - int
......BitWiseOr
........Id(variable)
........IntLit(2) - int
......BitWiseAnd
........Id(variable)
........IntLit(2) - int
......And
........Id(variable)
........IntLit(2) - int
......Or
........Id(variable)
........IntLit(2) - int
......BitWiseXor
........Id(variable)
........IntLit(2) - int
......Mod - int
........Id(variable)
........IntLit(2) - int
......Div
........Mul - int
..........Id(variable)
..........IntLit(2) - int
........IntLit(2) - int
......Mul - int
........Div
..........Id(variable)
..........IntLit(2) - int
........IntLit(2) - int
......Div
........Id(variable)
........Plus
..........Call - int
............Id(getchar) - int(void)
............Id(s)
......Not
........Id(variable)
......Plus
........Id(variable)
......Minus
........Id(variable)
......Store
........Plus
..........Id(variable)
........IntLit(2) - int
......Store
........Id(i)
........Store
..........BitWiseXor
............Not
..............Id(i)
............IntLit(1) - int
..........BitWiseOr
............Add - int
..............Id(a)
..............Id(b)
............Mod - int
..............Id(c)
..............Id(d)
......Store
........Id(a)
........Id(b)
......Call
........Id(printf)
........Store
..........Id(a)
..........Add - int
............Id(b)
............IntLit(1) - int
........Eq - int
..........Id(c)
..........Mod - int
............Div
..............Id(d)
..............Plus
................Minus
..................Not
....................Id(x)
............IntLit(4) - int
........Or
..........Id(x)
..........Id(a)
........BitWiseAnd
..........Id(y)
..........Id(b)
........BitWiseXor
..........Id(z)
..........Id(d)
......Comma
........Comma
..........Comma
............Id(raca)
............Id(rrew)
..........Id(oi)
........Call - int
..........Id(putchar) - int(int)
..........Id(oi)
..........Id(x)
..........Id(d)
......Call
........Id(printf)
........Id(oi)
........Id(x)
........Id(y)
..FuncDefinition
....Int
....Id(statements)
....ParamList
......ParamDeclaration
........Void
....FuncBody
......While
........IntLit(1) - int
........StatList
..........If
............Id(x)
............StatList
..............If
................Id(x)
................StatList
..................Call
....................Id(printf)
....................Id(x)
..................Call
....................Id(printf)
....................Id(x)
..................Call
....................Id(printf)
....................Id(x)
..................Call
....................Id(printf)
....................Id(x)
..................Return
....................IntLit(1) - int
................Null
..............If
................IntLit(1) - int
................StatList
..................Call
....................Id(printf)
....................Id(x)
..................Call
....................Id(printf)
....................Id(x)
..................Call
....................Id(printf)
....................Id(x)
..................Call
....................Id(printf)
....................Id(x)
................Call
..................Id(printf)
..................Id(x)
............StatList
..............While
................IntLit(1) - int
................Return
..................IntLit(0) - int
..............Call
................Id(printf)
................Id(x)
..........If
............Id(cona)
............StatList
..............Call
................Id(printf)
................Id(x)
..............Call
................Id(printf)
................Id(x)
..............Call
................Id(printf)
................Id(x)
..............Call
................Id(printf)
................Id(x)
..............Call
................Id(printf)
................Id(x)
..............Return
................IntLit(1) - int
............Null
......If
........And
..........Eq - int
............Id(x)
............IntLit(1) - int
..........Ne - int
............Id(x)
............IntLit(1) - int
........Return
..........IntLit(1) - int
........Null
......If
........Not
..........Id(x)
........Call
..........Id(printf)
..........ChrLit('a') - int
........If
..........Comma
............Id(oi)
............Id(wk)
..........StatList
............Call
..............Id(printf)
..............Id(x)
............Call
..............Id(gets)
..........Call
............Id(printf)
............Id(x)
......If
........Id(a)
........Id(i)
........Null
......While
........Id(a)
........While
..........Id(b)
..........StatList
............Call
..............Id(printf)
..............IntLit(1) - int
............If
..............Id(c)
..............While
................Id(d)
................Null
..............Null
..FuncDefinition
....Int
....Id(oi)
....ParamList
......ParamDeclaration
........Int
........Id(tudo)
......ParamDeclaration
........Int
........Id(bem)
....FuncBody
......Declaration
........Char
........Id(a)
......Declaration
........Char
........Id(b)
......Declaration
........Char
........Id(c)
........ChrLit('a') - int
......Declaration
........Double
........Id(d)
......Declaration
........Double
........Id(e)
......Declaration
........Double
........Id(f)
......Store
........Id(e) - double
........IntLit(4) - int
......Store
........Id(f) - double
........Add - int
..........Id(d) - double
..........Id(e) - double
..FuncDefinition
....Int
....Id(x)
....ParamList
......ParamDeclaration
........Int
........Id(x)
....FuncBody
......Declaration
........Char
........Id(a)
........Id(b)
......Declaration
........Char
........Id(r)
........Sub - int
..........Id(a) - char
..........Id(b)
......Call - int
........Id(putchar) - int(int)
........Store - int
..........Id(x) - int(int)
..........Id(a) - char
........Add - int
..........Id(a) - char
..........Id(v)
........Sub - int
..........Id(c)
..........Id(d)
........Not
..........Id(b)
........Plus
..........Id(a) - char
........Minus
..........Id(b)
..Declaration
....Int
....Id(a)
..FuncDefinition
....Int
....Id(main)
....ParamList
......ParamDeclaration
........Int
........Id(argc)
......ParamDeclaration
........Char
........Id(argv)
....FuncBody
......Declaration
........Int
........Id(a)
......Declaration
........Int
........Id(b)
......If
........Id(a)
........Null
........If
..........Id(a)
..........Null
..........Store
............Id(a)
............IntLit(1)
..FuncDefinition
....Void
....Id(test)
....ParamList
......ParamDeclaration
........Int
........Id(a)
....FuncBody
..FuncDefinition
....Int
....Id(main)
....ParamList
......ParamDeclaration
........Int
....FuncBody
......Call
........Id(test)
........Comma
..........IntLit(2)
..........IntLit(3)
........IntLit(1)
......If
........Id(b)
........StatList
..........If
............Id(c)
............Store
..............Id(a)
..............IntLit(2)
............Null
..........If
............Id(b)
............If
..............Id(e)
..............Null
..............Null
............Null
........Null
..FuncDefinition
....Int
....Id(main)
....ParamList
......ParamDeclaration
........Void
....FuncBody
......Declaration
........Int
........Id(a)
......Declaration
........Int
........Id(b)
......Declaration
........Int
........Id(c)
......Declaration
........Int
........Id(d)
......Declaration
........Int
........Id(e)
......Call
........Id(funcao)
......Call
........Id(funcao)
........Id(a)
......Call
........Id(funcao)
........Id(a)
........Id(b)
......Call
........Id(funcao)
........Comma
..........Id(a)
..........Id(b)
......Not
........Plus
..........Id(a)
......Minus
........Not
..........Id(a)
......Store
........Add
..........Mul
............Add
..............Id(a)
..............Id(b)
............Id(a)
..........Id(b)
........Gt
..........Div
............Id(b)
............Id(a)
..........Mul
............Id(a)
............Sub
..............Id(c)
..............Id(d)
..FuncDefinition
....Int
....Id(main)
....ParamList
......ParamDeclaration
........Void
....FuncBody
......If
........Id(a)
........Store
..........Id(a)
..........IntLit(0)
........Null
......If
........Id(a)
........Store
..........Id(a)
..........IntLit(0)
........Store
..........Id(a)
..........IntLit(0)
......If
........Id(a)
........StatList
..........Store
............Id(a)
............IntLit(0)
..........Store
............Id(a)
............IntLit(0)
..........Store
............Id(a)
............IntLit(0)
..........Store
............Id(a)
............IntLit(0)
..........Store
............Id(a)
............IntLit(0)
..........Store
............Id(a)
............IntLit(0)
........StatList
..........Store
............Id(a)
............IntLit(0)
..........Store
............Id(a)
............IntLit(0)
..........Store
............Id(a)
............IntLit(0)
..........Store
............Id(a)
............IntLit(0)
..........Store
............Id(a)
............IntLit(0)
..........Store
............Id(a)
............IntLit(0)
..........Store
............Id(a)
............IntLit(0)
......If
........Id(a)
........Null
........Null
......If
........Id(a)
........StatList
..........StatList
............Store
..............Id(a)
..............IntLit(0)
............Store
..............Id(a)
..............IntLit(0)
..........StatList
............Store
..............Id(a)
..............IntLit(0)
............Store
..............Id(a)
..............IntLit(0)
..........StatList
............Store
..............Id(a)
..............IntLit(0)
............Store
..............Id(a)
..............IntLit(0)
..........StatList
............Store
..............Id(a)
..............IntLit(0)
............Eq
..............Id(a)
..............IntLit(0)
........Null
......While
........Id(a)
........Store
..........Id(a)
..........IntLit(0)
......While
........Id(a)
........Null
......Return
........Id(a)
......Return
........Null
......Div
........Minus
..........Id(oio)
........Plus
..........Id(ioi)
..FuncDefinition
....Int
....Id(fu)
....ParamList
......ParamDeclaration
........Void
....FuncBody
......Store
........Id(e)
........Div
..........Mul - int
............Add - int
..............Id(a) - int
..............Id(b)
............Id(c)
..........Id(d)
......Div
........Mul - int
..........IntLit(30) - int
..........IntLit(15) - int
........IntLit(5) - int
......Store
........Id(e)
........Div
..........Mul - int
............Add - int
..............Id(a) - int
..............Id(b)
............Id(c)
..........Id(d)
......Div
........Mul - int
..........IntLit(30) - int
..........IntLit(15) - int
........IntLit(5) - int
......Store
........Id(e)
........Mul - int
..........Add - int
............Id(a) - int
............Id(b)
..........Div
............Id(c)
............Id(d)
......Mul - int
........IntLit(30) - int
........Div
..........IntLit(15) - int
..........IntLit(5) - int
......Store
........Id(e)
........Add - int
..........Id(a) - int
..........Div
............Mul - int
..............Id(b)
..............Id(c)
............Id(d)
......Add - int
........IntLit(20) - int
........Div
..........IntLit(150) - int
..........IntLit(5) - int
......Call
........Id(printf)
........Call
..........Id(q)
..........IntLit(1) - int
..........IntLit(2) - int
........Comma
..........Comma
............IntLit(3) - int
............IntLit(3) - int
..........IntLit(4) - int
......Call
........Id(printf)
........IntLit(1) - int
........Comma
..........IntLit(2) - int
..........IntLit(3) - int
......Call
........Id(printf)
........Comma
..........IntLit(1) - int
..........IntLit(2) - int
........IntLit(3) - int
......Call
........Id(printf)
........Comma
..........IntLit(3) - int
..........IntLit(4) - int
..FuncDefinition
....Int
....Id(max)
....ParamList
......ParamDeclaration
........Int
........Id(num1)
......ParamDeclaration
........Int
........Id(num2)
....FuncBody
......Declaration
........Int
........Id(result)
......If
........Gt - int
..........Id(num1) - int
..........Id(num2) - int
........Store - int
..........Id(result) - int
..........Id(num1) - int
........Store - int
..........Id(result) - int
..........Id(num2) - int
......Return
........Id(result) - int
..FuncDeclaration
....Int
....Id(max)
....ParamList
......ParamDeclaration
........Int
........Id(num1)
......ParamDeclaration
........Int
........Id(num2)
..FuncDefinition
....Int
....Id(main)
....ParamList
......ParamDeclaration
........Void
....FuncBody
......Declaration
........Int
........Id(a)
........IntLit(100)
......Declaration
........Int
........Id(b)
........IntLit(200)
......Declaration
........Int
........Id(ret)
......Store
........Id(ret)
........Call
..........Id(max)
..........Id(a)
..........Id(b)
......Call
........Id(printf)
........Id(a)
......Return
........IntLit(0)
..FuncDefinition
....Int
....Id(max)
....ParamList
......ParamDeclaration
........Int
........Id(num1)
......ParamDeclaration
........Int
........Id(num2)
....FuncBody
......Declaration
........Int
........Id(result)
......If
........Gt
..........Id(num1)
..........Id(num2)
........Store
..........Id(result)
..........Id(num1)
........Store
..........Id(result)
..........Id(num2)
......Return
........Id(result)
..FuncDefinition
....Int
....Id(main)
....ParamList
......ParamDeclaration
........Int
........Id(a)
....FuncBody
......Declaration
........Int
........Id(firstNumber)
......Declaration
........Int
........Id(secondNumber)
......Declaration
........Int
........Id(sumOfTwoNumbers)
......Call
........Id(scanf)
........Id(firstNumber)
........Id(secondNumber)
......Store
........Id(sumOfTwoNumbers)
........Add
..........Id(firstNumber)
..........Id(secondNumber)
......Call
........Id(printf)
........Id(firstNumber)
........Id(secondNumber)
........Id(sumOfTwoNumbers)
......Return
........IntLit(0)
..FuncDefinition
....Int
....Id(main)
....ParamList
......ParamDeclaration
........Int
........Id(a)
....FuncBody
......Declaration
........Int
........Id(base)
......Declaration
........Int
........Id(exponent)
......While
........Ne
..........Id(exponent)
..........IntLit(0)
........StatList
..........Store
............Id(result)
............Mul
..............Id(result)
..............Id(base)
..........Store
............Id(exponent)
............Sub
..............Id(exponent)
..............IntLit(1)
......Call
........Id(printf)
........Id(result)
......Return
........IntLit(0)
..Declaration
....Int
....Id(a)
..FuncDefinition
....Int
....Id(main)
....ParamList
......ParamDeclaration
........Int
........Id(n)
....FuncBody
......Declaration
........Int
........Id(reversedNumber)
........IntLit(0)
......Declaration
........Int
........Id(remainder)
......While
........Ne
..........Id(n)
..........IntLit(0)
........StatList
..........Store
............Id(remainder)
............Mod
..............Id(n)
..............IntLit(10)
..........Store
............Id(reversedNumber)
............Add
..............Mul
................Id(reversedNumber)
................IntLit(10)
..............Id(remainder)
..........Store
............Id(n)
............Div
..............Id(n)
..............IntLit(10)
......Call
........Id(printf)
........Id(reversedNumber)
......Return
........IntLit(0)
..FuncDefinition
....Int
....Id(main)
....ParamList
......ParamDeclaration
........Void
....FuncBody
......Declaration
........Int
........Id(number1)
......Declaration
........Int
........Id(number2)
......Call
........Id(printf)
........Id(number1)
......Call
........Id(scanf)
........Id(number2)
......If
........Eq
..........Id(number1)
..........Id(number2)
........Call
..........Id(printf)
..........Id(number1)
........If
..........Gt
............Id(number1)
............Id(number2)
..........Call
............Id(printf)
............Id(number1)
..........Call
............Id(printf)
............Id(number2)
......Return
........IntLit(0)
